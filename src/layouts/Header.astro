---
import Cart from "../components/cart.astro";
---

<header>
	<div class="container">
		<div class="menu-flex">
			<a tabindex="1" href="/"><div>Home</div></a>
			<a tabindex="2" href="/products"><div>Products</div></a>
			<a tabindex="3" href="/nutrition"><div>Nutrition</div></a>
			<a tabindex="4" href="/contact"><div>Contact</div></a>
			<!-- tabIndex 5 reserved for hidden menu, when dispaly none is active, shouldn't affect normal traversal -->
		</div>
		<img class="main-logo" src="/head-logo.png" alt="main-logo" onclick="location.replace('/');">
		<Cart></Cart>
	</div>
</header>
<style>
    header{
		background-color: #AC0000;
		height: 40px;
		padding: 2px 0px;
		position: fixed;
		top:0;
        left: 0;
        right: 0;
		z-index: 99;
	}

	a{
		text-decoration: none;
	}

	a > div {
		color: #fff;
		text-decoration: none !important;
	}

	.container{
		position: relative;
		height: 100%;
		width: 100%;
	}

	.main-logo{
		position: absolute;
		height: inherit;
		left: 50%;
		top:2px;
		transform: translateX(-50%);
		cursor: pointer;
	}

	.menu-flex{
		height: 100%;
		display: flex;
		gap: 10px;
		margin-left: 15px;
		align-items: center;
	}

    @media only screen and (max-width: 900px){
		.menu-flex{
			display: none;
		}
	}

	.menu-flex div{
		cursor: pointer;
		padding: 8px 5px;
	}

	.menu-flex div::after{
		content: "";
		display:block;
		bottom: 0;
		height: 2px;
		width: 0px;
		border-radius: 2px;
		transition: 250ms;
	}

	.menu-flex div:hover::after{
		content: "";
		width: 100%;
		background-color: white; 
	}
	a{
		text-decoration: none;
		color: white;
	}

    @media only screen and (max-width: 500px){
        .main-logo{
            left: 5px;
            transform: none;
        }
    }
</style>
<style is:inline>
    /************* START STYLING CART CARD FOR NEWLY BUILT PRODUCTS *************/
    .cart-product{
        height: 50px;
        /* background-color: grey; */
        border: 2px solid black;
        border-radius: 8px;
        display: grid;
        grid-template-columns: 50px auto 30px;
        margin: 5px;
        width: auto;
        overflow: hidden;
        box-shadow: 0px 0px 5px white;
    }
    .cart-img{
        aspect-ratio: 1/1;
        height: 50px;
        background-color: black;
        border-right: 2px solid black;
    }
    .cart-info{
        overflow: hidden;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
		align-items: center;
        left: 50px;
        right: 31px;
        background-color: black;
        padding-left: 5px
    }
	.cart-quantity{
		/* padding: 16px; */
	}
    .cart-quantity-flex{
        display: flex;
        flex-direction: row;
        gap: 5px;
        margin-right: 10px;
    }
    .cart-quantity-flex :not(:nth-child(2)){
        font-weight: 700;
        cursor: pointer;
        user-select: none;
    }
    .cart-remove{
        border: 2px solid red;
        border-left: 2px solid transparent;
        background-color:black;
        width: 100%;
        text-align:center;
        display: flex;
        flex-direction:column;
        justify-content:center;
        color: red;
        font-weight:700;
        transition: 150ms ease-in-out;
        border-bottom-right-radius: 12px;
        border-top-right-radius: 12px;
    }
    .cart-remove:hover{
        background-color:red;
        color: white;
        cursor: pointer;
    }
    /************* END STYLING CART CARD FOR NEWLY BUILT PRODUCTS *************/
</style>
<script is:inline>
	function addToCart(src, alt, name, price, priceID){
        
        let cartContainer = document.getElementById('cartContainer');
        
        // add it to the list of hash maps
        if(localStorage.getItem('cl-stripe-cart') == true){
            localStorage.removeItem('cl-stripe-cart');
        }
        var cartData = JSON.parse(localStorage.getItem('cl-stripe-cart'));
        if (cartData == null){
            cartData = JSON.parse('{}');
            cartData[name] = JSON.parse('{}');
        }
        if(cartData[name] != null && document.getElementById('cart-'+name) != null){
            cartData[name].quantity += 1;
            var node = document.getElementById('cart-'+name)
            node.querySelector('.cart-quantity').textContent = cartData[name].quantity;
            localStorage.setItem('cl-stripe-cart', JSON.stringify(cartData));
            return;
        }
        if(cartData[name] != null && document.getElementById('cart-'+name) == null){
            cartData[name] = {'src':src, 'alt':alt, 'name':name, 'price':price, 'priceID':priceID, 'quantity': cartData[name].quantity};
        } else {
            cartData[name] = {'src':src, 'alt':alt, 'name':name, 'price':price, 'priceID':priceID, 'quantity': 1};
        }
        
        localStorage.setItem('cl-stripe-cart', JSON.stringify(cartData));

        //build it on the fly, ugh
        var container = document.createElement('div');
        var product = document.createElement('div');
        var image = document.createElement('img');
        var info = document.createElement('div');
        var info2 = document.createElement('div');
        var nameEl = document.createElement('div');
        var priceEl = document.createElement('div');
        var quantityEl = document.createElement('div');
        var quantityFlex = document.createElement('div');
        var increment = document.createElement('div');
        var decrement = document.createElement('div');
        var remove = document.createElement('div');

        //image props
        image.setAttribute('src', src);
        image.setAttribute('alt', alt);
        image.classList = 'cart-img';

        //text props
        nameEl.textContent = name;
        priceEl.textContent = price;
        product.setAttribute('data-priceID', priceID);
        remove.textContent = 'X';
        quantityEl.textContent = cartData[name].quantity;
        increment.textContent = '+';
        decrement.textContent = '-';

        //add styling
        product.classList = 'cart-product';
        info.classList = 'cart-info';
        nameEl.classList = 'cart-name';
        priceEl.classList = 'cart-price';
        remove.classList = 'cart-remove';
        quantityEl.classList = 'cart-quantity';
        quantityFlex.classList = 'cart-quantity-flex';

        //add click events
        remove.addEventListener('click', () => {
            removeFromCart(name);
        });

        increment.addEventListener('click', () => {
            cartQuantityIncrement(name, true);
        });

        decrement.addEventListener('click', () => {
            cartQuantityIncrement(name, false);
        });

        //build DOM Structure
        container.appendChild(product);
        container.setAttribute('id', 'cart-'+name);
        product.appendChild(image);
        product.appendChild(info);
        info2.appendChild(nameEl);
        info2.appendChild(priceEl);
        info.appendChild(info2);
        quantityFlex.appendChild(decrement);
        quantityFlex.appendChild(quantityEl);
        quantityFlex.appendChild(increment);
        info.appendChild(quantityFlex);
        product.append(remove);

        // console.log(cartContainer);

        //add it to the cart
        cartContainer.appendChild(container);

        // document.getElementById('cartContainer') = cartContainer;
    }

    function removeFromCart(name){
        let cartData = localStorage.getItem('cl-stripe-cart');
        cartData = JSON.parse(cartData);
        delete cartData[name];

        document.getElementById('cart-'+name).remove();

        localStorage.setItem('cl-stripe-cart', JSON.stringify(cartData));
    }
    function cartQuantityIncrement(name, bool){
        var cartData = JSON.parse(localStorage.getItem('cl-stripe-cart'));
        var quantityEl = document.getElementById('cart-'+name).querySelector('.cart-quantity');
        var quantityNum = quantityEl.textContent - 0;

        if(bool){
            quantityEl.textContent = quantityNum - (-1);
            cartData[name].quantity = quantityNum - (-1);
        } else {
            if(quantityNum <= 1) return;
            quantityEl.textContent = quantityNum - 1;
            cartData[name].quantity = quantityNum -1;
        }

        localStorage.setItem('cl-stripe-cart', JSON.stringify(cartData));
    }
</script>